parameters:
  ConfigurationStorageConnectionString:
  Environment:
  LoggingRedisConnectionString:
  OverrideBlockOnPossibleDataLoss:
  ResourceGroupLocation:
  ServiceConnection:
  SharedStorageAccountConnectionString:
  SolutionBaseName:
  SubscriptionId:

jobs:
- deployment: DeployAppsAndDatabase
  pool:
    name: DAS - Continuous Deployment Agents
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - template: azure-pipelines-templates/deploy/step/set-backendaccessrestrictions-variable.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SharedEnvResourceGroup: $(SharedEnvResourceGroup)
            SharedEnvVirtualNetworkName : $(SharedEnvVirtualNetworkName)
            BackEndAccessRestrictionsExcludedSubnets: $(BackEndAccessRestrictionsExcludedSubnets)
            ResourceEnvironmentName: $(ResourceEnvironmentName)
            UnrestrictedEnvironments: $(UnrestrictedEnvironments)
            UptimeMonitoringAccessRestrictions: $(UptimeMonitoringAccessRestrictions)
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: ${{ parameters.SubscriptionId }}
            Location: ${{ parameters.ResourceGroupLocation }}
            Environment: ${{ parameters.Environment }}
            TemplatePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.json
            ParametersPath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/azure/template.parameters.json
            IsMultiRepoCheckout: true
            TemplateSecrets:
              LoggingRedisConnectionString: ${{ parameters.LoggingRedisConnectionString }}
              ConfigurationStorageConnectionString: ${{ parameters.ConfigurationStorageConnectionString }}
              SharedStorageAccountConnectionString: ${{ parameters.SharedStorageAccountConnectionString }}
        - template: azure-pipelines-templates/deploy/step/generate-config.yml@das-platform-building-blocks
          parameters:
            EnvironmentName: $(EnvironmentName)
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SourcePath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-tasks
            StorageAccountName: $(ConfigurationStorageAccountName)
            StorageAccountResourceGroup: $(SharedEnvResourceGroup)
            TargetFileName: '*.schema.json'
            TableName: Configuration
            ConfigurationSecrets:
              ClientSecret: $(ClientSecret)
              TasksDBString: $(TasksDBString)
              TasksMessageServiceBusConnectionString: $(TasksMessageServiceBusConnectionString)
              MAMessageServiceBusConnectionString: $(MAMessageServiceBusConnectionString)
              CommitmentsMessageServiceBusConnectionString: $(CommitmentsMessageServiceBusConnectionString)
              SharedServiceBusConnectionString: $(SharedServiceBusConnectionString)
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: $(ApiAppServiceName)
            DeploymentPackagePath: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.API/${{ parameters.SolutionBaseName }}.API.zip
        - task: AzureRmWebAppDeployment@4
          displayName: Deploy Worker - $(WorkerAppServiceName)
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            appType: webApp
            WebAppName: $(WorkerAppServiceName)
            ResourceGroupName: $(ResourceGroupName)
            Package: $(Pipeline.Workspace)/${{ parameters.SolutionBaseName }}/${{ parameters.SolutionBaseName }}.Worker/${{ parameters.SolutionBaseName }}.Worker.zip
            RemoveAdditionalFilesFlag: true
            DeploymentType: zipDeploy
            UseWebDeploy: true
        - template: azure-pipelines-templates/deploy/step/sql-dacpac-deploy.yml@das-platform-building-blocks
          parameters:
            AzureSubscription: ${{ parameters.ServiceConnection }}
            DacpacFile: $(Pipeline.Workspace)/DacpacArtifact/src/${{ parameters.SolutionBaseName }}.Database/bin/Output/${{ parameters.SolutionBaseName }}.Database.dacpac
            DatabaseName: $(DatabaseName)
            Environment: ${{ parameters.Environment }}
            OverrideBlockOnPossibleDataLoss: ${{ parameters.OverrideBlockOnPossibleDataLoss }}
            ServerName: $(SharedSQLServerFQDN)
            SqlUsername: $(SharedSQLServerUsername)
            SqlPassword: $(SharedSQLServerPassword)
