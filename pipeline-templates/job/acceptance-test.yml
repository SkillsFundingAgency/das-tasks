parameters:
  SolutionBaseName:
  BuildConfiguration:
  BuildPlatform:
  ServiceConnection:
  SharedSQLServerName:

jobs:
- job: AcceptanceTest
  #dependsOn: DeployAppsAndDatabase
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
    workspace:
      clean: all
  variables:
  - name: WhitelistRuleName
    value: $[ replace(variables['Build.Repository.Name'], '/', '_') ] ##TO DO: refactor as deployment job and append Environment.Name to Name
  steps:
  - download: current
    artifact: ${{ parameters.SolutionBaseName }}
  - checkout: das-platform-automation

  - task: esfadevops.Tokenization.custom-build-task.Tokenization@0
    displayName: 'Tokenization: Transform file *.config'
    inputs:
      SourcePath: '$(Pipeline.Workspace)/'
      TargetFileNames: '*.config'
      RequireVariable: true

  - task: AzurePowerShell@5
    displayName: Get Agent's IP Address
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      ScriptPath: '$(System.DefaultWorkingDirectory)/Infrastructure-Scripts/Get-MyIpAddress.ps1'
      ScriptArguments: '-WhatsMyIpUrl  "https://ifconfig.me/ip"'
      azurePowerShellVersion: LatestVersion
  - task: AzurePowerShell@5
    displayName: Whitelist agent's IP address
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      ScriptPath: '$(System.DefaultWorkingDirectory)/Infrastructure-Scripts/Add-AzSqlIpException.ps1'
      ScriptArguments: '-Name $(WhitelistRuleName) -IPAddress  $(IPAddress) -ResourceNamePattern ${{ parameters.SharedSQLServerName }}'
      azurePowerShellVersion: LatestVersion
  - task: VSTest@2
    displayName: Acceptance Tests
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        $(Pipeline.Workspace)\**\*AcceptanceTests.dll
        !**\*TestAdapter.dll
        !**\obj\**
      configuration: ${{ parameters.BuildConfiguration }}
      platform: ${{ parameters.BuildPlatform }}
  - task: AzurePowerShell@5
    ##TO DO: test this by breaking ip address task
    condition: and(always(), ne(variables.IPAddress, ''))
    displayName: Remove Whitelisted Agent's IP Address
    inputs:
      azureSubscription: ${{ parameters.ServiceConnection }}
      ScriptPath: '$(System.DefaultWorkingDirectory)/Infrastructure-Scripts/Remove-AzSqlIpException.ps1'
      ScriptArguments: '-Name  $(WhitelistRuleName) -IPAddress $(IPAddress) -ResourceNamePattern ${{ parameters.SharedSQLServerName }}'
      azurePowerShellVersion: LatestVersion
